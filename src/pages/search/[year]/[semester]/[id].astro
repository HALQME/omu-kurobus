---
import Layout from "@/src/layouts/layout.astro";
import { styles } from "@/styles/style";
import { getReviews } from "@/utils/reviews";
import SimilarCourses from "@/components/similar-courses.astro";
import CourseInfo from "@/src/components/course-info.astro";
import { CourseSummarySchema } from "@/types/schema";
import { z } from "astro/zod";
import type { CourseSummary } from "@/types/schema";
export const prerender = false;

const year = Astro.params.year;
const semester = Astro.params.semester;
const courseId = Astro.params.id;

if (!courseId || !year || !semester) {
    return new Response("Not Found", { status: 404 });
}

const reviews = await getReviews(courseId);
const url = new URL(`/api/courses/${year}/${semester}/data.json`, Astro.url);
let res;
try {
    res = await fetch(url);
} catch (e) {
    return new Response("Internal Server Error", { status: 500 });
}
const resonse = await res.json();
if (!resonse) {
    return new Response("Internal Server Error", { status: 500 });
}
const coursesResult = z.array(CourseSummarySchema).safeParse(resonse);
if (!coursesResult.success) {
    return new Response("Internal Server Error", { status: 500 });
}
const courses = coursesResult.data;
const course = courses.find((course) => year + course.id === courseId);

if (!course) {
    return new Response("Course Not Found", { status: 404 });
}
---

<Layout
    title="感想閲覧"
    description="授業を受講した皆の感想や愚痴が詰まったまとめサイトです。"
>
    <section class={styles.section.container}>
        <CourseInfo id={courseId} />
        <div class={styles.section.headingWrapper}>
            <div
                class={`${styles.section.headingLine} ${styles.section.headingLineLeft}`}
            >
            </div>
            <h2 class={styles.section.title}>感想を閲覧</h2>
            <div
                class={`${styles.section.headingLine} ${styles.section.headingLineRight}`}
            >
            </div>
        </div>
        <div class={styles.section.content}>
            {
                !reviews || reviews.length === 0 ? (
                    <p>まだ感想がありません。</p>
                ) : (
                    <ul>
                        {reviews.map((review) => (
                            <p>{review.comment}</p>
                        ))}
                    </ul>
                )
            }
        </div>
    </section>

    {/* 類似コースコンポーネントを追加 */}
    <section class={styles.section.container}>
        <div class={styles.section.headingWrapper}>
            <div
                class={`${styles.section.headingLine} ${styles.section.headingLineLeft}`}
            >
            </div>
            <h2 class={styles.section.title}>類似コース</h2>
            <div
                class={`${styles.section.headingLine} ${styles.section.headingLineRight}`}
            >
            </div>
        </div>
        <div class={styles.section.content}>
            <div class="mb-6">
                <h2 class={styles.sectionHeading}>類似コース</h2>
                <p class={`text-gray-600 dark:text-gray-400 mb-4`}>
                    以下のコースは名前、担当教員、キャンパスなどの情報から類似度を計算して表示しています。
                </p>
            </div>
            <SimilarCourses
                year={year}
                courseId={courseId}
                name={course.name}
                teachers={course.teachers}
                campus={course.campus}
                period={course.period}
                semester={course.semester
                    ? course.semester
                    : year + "年度" + (semester == "0" ? "前期" : "後期")}
                server:defer
            >
                <span slot="fallback" class={styles.loading.fallbackText}>
                    Loading
                    <span class={styles.loading.spinner}></span>
                </span>
            </SimilarCourses>
        </div>
    </section>
</Layout>
